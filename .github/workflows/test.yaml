name: test
on: [push, pull_request]
env:
  BUILDDIR: "builddir"
  SRCDIR: "srcdir"
  COVDIR: "coverage"
  INSTALLDIR: "installdir"
jobs:
  autotools:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/p11-glue/build:latest
    env:
      BUILD_OPTS: --enable-coverage
      COVERAGE: yes
    steps:
      # Create user
      - run: useradd -m user
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          path: ${{ env.SRCDIR }}
      # Setup directories
      - run: cp -r $GITHUB_WORKSPACE/$SRCDIR $GITHUB_WORKSPACE/$COVDIR
      - run: mkdir $GITHUB_WORKSPACE/$BUILDDIR
      - run: chown -R user $GITHUB_WORKSPACE/$BUILDDIR
      - run: mkdir $GITHUB_WORKSPACE/$INSTALLDIR
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source
      - run: chown -R user $GITHUB_WORKSPACE/$INSTALLDIR
      - run: chown -R user $GITHUB_WORKSPACE/$SRCDIR
      - run: chown -R user $GITHUB_WORKSPACE/$COVDIR
      # Build
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && meson $GITHUB_WORKSPACE/$BUILDDIR -Dstrict=true -Dprefix=$GITHUB_WORKSPACE/$INSTALLDIR -Dlibdir=$GITHUB_WORKSPACE/$INSTALLDIR/lib -Dsysconfdir=$GITHUB_WORKSPACE/$INSTALLDIR/etc -Dtrust-paths=$GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source:$GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source $MESON_BUILD_OPTS"
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR"
      # Test
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && P11_KIT_DEBUG=all $MESON_TEST_ENV meson test -C $GITHUB_WORKSPACE/$BUILDDIR $MESON_TEST_OPTS || cat $GITHUB_WORKSPACE/$BUILDDIR/meson-logs/testlog.txt"
      # Install
      - run: sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR install"
      # TODO Coverage
      # - run: su user sh -c "pip3 install --user cpp-coveralls"


  address-sanitizer:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/p11-glue/build:latest
    env:
      MESON_BUILD_OPTS: -Db_sanitize=address
    steps:
      # Create user
      - run: useradd -m user
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          path: ${{ env.SRCDIR }}
      # Setup directories
      - run: cp -r $GITHUB_WORKSPACE/$SRCDIR $GITHUB_WORKSPACE/$COVDIR
      - run: mkdir $GITHUB_WORKSPACE/$BUILDDIR
      - run: chown -R user $GITHUB_WORKSPACE/$BUILDDIR
      - run: mkdir $GITHUB_WORKSPACE/$INSTALLDIR
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source
      - run: chown -R user $GITHUB_WORKSPACE/$INSTALLDIR
      - run: chown -R user $GITHUB_WORKSPACE/$SRCDIR
      - run: chown -R user $GITHUB_WORKSPACE/$COVDIR
      # Build
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && meson $GITHUB_WORKSPACE/$BUILDDIR -Dstrict=true -Dprefix=$GITHUB_WORKSPACE/$INSTALLDIR -Dlibdir=$GITHUB_WORKSPACE/$INSTALLDIR/lib -Dsysconfdir=$GITHUB_WORKSPACE/$INSTALLDIR/etc -Dtrust-paths=$GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source:$GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source $MESON_BUILD_OPTS"
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR"
      # Test
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && P11_KIT_DEBUG=all $MESON_TEST_ENV meson test -C $GITHUB_WORKSPACE/$BUILDDIR $MESON_TEST_OPTS || cat $GITHUB_WORKSPACE/$BUILDDIR/meson-logs/testlog.txt"
      # Install
      - run: sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR install"

  undefined-sanitizer:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/p11-glue/build:latest
    env:
      MESON_BUILD_OPTS: -Db_sanitize=undefined
    steps:
      # Create user
      - run: useradd -m user
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          path: ${{ env.SRCDIR }}
      # Setup directories
      - run: cp -r $GITHUB_WORKSPACE/$SRCDIR $GITHUB_WORKSPACE/$COVDIR
      - run: mkdir $GITHUB_WORKSPACE/$BUILDDIR
      - run: chown -R user $GITHUB_WORKSPACE/$BUILDDIR
      - run: mkdir $GITHUB_WORKSPACE/$INSTALLDIR
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source
      - run: chown -R user $GITHUB_WORKSPACE/$INSTALLDIR
      - run: chown -R user $GITHUB_WORKSPACE/$SRCDIR
      - run: chown -R user $GITHUB_WORKSPACE/$COVDIR
      # Build
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && meson $GITHUB_WORKSPACE/$BUILDDIR -Dstrict=true -Dprefix=$GITHUB_WORKSPACE/$INSTALLDIR -Dlibdir=$GITHUB_WORKSPACE/$INSTALLDIR/lib -Dsysconfdir=$GITHUB_WORKSPACE/$INSTALLDIR/etc -Dtrust-paths=$GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source:$GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source $MESON_BUILD_OPTS"
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR"
      # Test
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && P11_KIT_DEBUG=all $MESON_TEST_ENV meson test -C $GITHUB_WORKSPACE/$BUILDDIR $MESON_TEST_OPTS || cat $GITHUB_WORKSPACE/$BUILDDIR/meson-logs/testlog.txt"
      # Install
      - run: sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR install"


  scan-build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/p11-glue/build:latest
    env:
      SCAN_BUILD: scan-build --status-bugs
    steps:
      # Create user
      - run: useradd -m user
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          path: ${{ env.SRCDIR }}
      # Setup directories
      - run: cp -r $GITHUB_WORKSPACE/$SRCDIR $GITHUB_WORKSPACE/$COVDIR
      - run: mkdir $GITHUB_WORKSPACE/$BUILDDIR
      - run: chown -R user $GITHUB_WORKSPACE/$BUILDDIR
      - run: mkdir $GITHUB_WORKSPACE/$INSTALLDIR
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source
      - run: chown -R user $GITHUB_WORKSPACE/$INSTALLDIR
      - run: chown -R user $GITHUB_WORKSPACE/$SRCDIR
      - run: chown -R user $GITHUB_WORKSPACE/$COVDIR
      # Build
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && meson $GITHUB_WORKSPACE/$BUILDDIR -Dstrict=true -Dprefix=$GITHUB_WORKSPACE/$INSTALLDIR -Dlibdir=$GITHUB_WORKSPACE/$INSTALLDIR/lib -Dsysconfdir=$GITHUB_WORKSPACE/$INSTALLDIR/etc -Dtrust-paths=$GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source:$GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source $MESON_BUILD_OPTS"
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && SCAN_BUILD='$SCAN_BUILD' ninja scan-build -C $GITHUB_WORKSPACE/$BUILDDIR"
      # Test
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && P11_KIT_DEBUG=all $MESON_TEST_ENV meson test -C $GITHUB_WORKSPACE/$BUILDDIR $MESON_TEST_OPTS || cat $GITHUB_WORKSPACE/$BUILDDIR/meson-logs/testlog.txt"
      # Install
      - run: sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR install"

  mingw:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/p11-glue/build:latest
    env:
      MESON_BUILD_OPTS: --cross-file build/cross_file_mingw64.txt
      MESON_TEST_ENV: WINEPATH=/usr/x86_64-x64-mingw32/sys-root/mingw/bin
      MESON_TEST_OPTS: --num-processes 1
    steps:
      # Create user
      - run: useradd -m user
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          path: ${{ env.SRCDIR }}
      # Setup directories
      - run: cp -r $GITHUB_WORKSPACE/$SRCDIR $GITHUB_WORKSPACE/$COVDIR
      - run: mkdir $GITHUB_WORKSPACE/$BUILDDIR
      - run: chown -R user $GITHUB_WORKSPACE/$BUILDDIR
      - run: mkdir $GITHUB_WORKSPACE/$INSTALLDIR
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source
      - run: chown -R user $GITHUB_WORKSPACE/$INSTALLDIR
      - run: chown -R user $GITHUB_WORKSPACE/$SRCDIR
      - run: chown -R user $GITHUB_WORKSPACE/$COVDIR
      # Build
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && meson $GITHUB_WORKSPACE/$BUILDDIR -Dstrict=true -Dprefix=$GITHUB_WORKSPACE/$INSTALLDIR -Dlibdir=$GITHUB_WORKSPACE/$INSTALLDIR/lib -Dsysconfdir=$GITHUB_WORKSPACE/$INSTALLDIR/etc -Dtrust-paths=$GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source:$GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source $MESON_BUILD_OPTS"
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR"
      # Test
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && P11_KIT_DEBUG=all $MESON_TEST_ENV meson test -C $GITHUB_WORKSPACE/$BUILDDIR $MESON_TEST_OPTS || cat $GITHUB_WORKSPACE/$BUILDDIR/meson-logs/testlog.txt"
      # Install
      - run: sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR install"

  cppcheck:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/p11-glue/build:latest
    env:
      PROFILE: cppcheck
    steps:
      # Create user
      - run: useradd -m user
      # Checkout repo
      - uses: actions/checkout@v2
        with:
          path: ${{ env.SRCDIR }}
      # Setup directories
      - run: cp -r $GITHUB_WORKSPACE/$SRCDIR $GITHUB_WORKSPACE/$COVDIR
      - run: mkdir $GITHUB_WORKSPACE/$BUILDDIR
      - run: chown -R user $GITHUB_WORKSPACE/$BUILDDIR
      - run: mkdir $GITHUB_WORKSPACE/$INSTALLDIR
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source
      - run: mkdir -p $GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source
      - run: chown -R user $GITHUB_WORKSPACE/$INSTALLDIR
      - run: chown -R user $GITHUB_WORKSPACE/$SRCDIR
      - run: chown -R user $GITHUB_WORKSPACE/$COVDIR
      # Build
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && meson $GITHUB_WORKSPACE/$BUILDDIR -Dstrict=true -Dprefix=$GITHUB_WORKSPACE/$INSTALLDIR -Dlibdir=$GITHUB_WORKSPACE/$INSTALLDIR/lib -Dsysconfdir=$GITHUB_WORKSPACE/$INSTALLDIR/etc -Dtrust-paths=$GITHUB_WORKSPACE/$INSTALLDIR/etc/pki/ca-trust-source:$GITHUB_WORKSPACE/$INSTALLDIR/share/pki/ca-trust-source $MESON_BUILD_OPTS"
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR"
      # Test
      - run: su - user sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && P11_KIT_DEBUG=all $MESON_TEST_ENV meson test -C $GITHUB_WORKSPACE/$BUILDDIR $MESON_TEST_OPTS || cat $GITHUB_WORKSPACE/$BUILDDIR/meson-logs/testlog.txt"
      # Install
      - run: sh -c "cd $GITHUB_WORKSPACE/$SRCDIR && ninja -C $GITHUB_WORKSPACE/$BUILDDIR install"

